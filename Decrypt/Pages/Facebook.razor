@page "/facebook"
@using Decrypt.Model.Facebook
@using Decrypt.Services

@inject DialogService _dialogService
@inject DataService _dataService

<PageTitle>Facebook Data</PageTitle>
<h1>Your Facebook Data</h1>

<div class="row">
	@if (_dataService.FbRoot?.AvailableData.TryGetValue(nameof(AdvertisersUsingYourActivity), out var wrapperObj)?? false)
	{
		<div class="col-4">
			<NumberCardWithTableDialog Title="@AdvertisersUsingYourActivity.Title"
			                           Number="((AdvertisersUsingYourActivity)wrapperObj).SharedAdvertisers?.Count() ?? 0"
			                           OnClickFunc="ShowAdvertisersUsingYourActivityDialog"/>
		</div>
	}
	@* <div class="col-4"> *@
	@* 	<NumberCardWithTableDialog Title="@AdvertiserYouInteractedWith.Title" *@
	@* 	                           Number="_dataService.FbRoot?.AdvertiserYouInteractedWith?.InteractedAdvertisers?.Count() ?? 0" *@
	@* 	                           OnClickFunc="ShowAdvertisersUsingYourActivityDialog"/> $1$ todo: change the function #1# *@
	@* </div> *@
</div>

@code {
	private async Task ShowAdvertisersUsingYourActivityDialog()
	{
		if (_dataService.FbRoot?.AvailableData.TryGetValue(nameof(AdvertisersUsingYourActivity), out var wrapper)?? false)
		{
			var advertiserUsingYourActivity = wrapper as AdvertisersUsingYourActivity;
			await _dialogService.OpenAsync<DialogDataTable<SharedAdvertiser>>(AdvertisersUsingYourActivity.Title,
				new Dictionary<string, object>
				{ { nameof(DialogDataTable<SharedAdvertiser>.Items), 
					advertiserUsingYourActivity?.SharedAdvertisers ?? Array.Empty<SharedAdvertiser>() },
				  { nameof(DialogDataTable<SharedAdvertiser>.Description), AdvertisersUsingYourActivity.Description }
				},
				new DialogOptions { Width = "90%", Height = "90%", Resizable = true });
		}
		
	}
}
