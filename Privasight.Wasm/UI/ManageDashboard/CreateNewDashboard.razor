@using Privasight.Wasm.Services
@using Privasight.Model.Shared.DataStructures.Dashboard

@inject DataService _dataService
@inject DialogService _dialogService

<h3>Create a New Dashboard</h3>
<div class="my-2">
	@* todo add validation on title to confirm its unique *@
	Name of the dashboard:
	<RadzenTextBox Class="w-50" Change="@OnDashboardNameChange"/>
</div>
<div class="row">
	<div class="col-md-8">
		<RadzenListBox
			class="w-100 h-100"
			Data="_newCardSettings"
			@bind-Value="_chosenCard"/>
	</div>
	<div class="col-md-4">
		<RadzenButton ButtonStyle="ButtonStyle.Success" Text="Create New Card" Click="OnCreateCardButtonClick"/>
		<br/><br/>
		<RadzenButton ButtonStyle="ButtonStyle.Danger" Text="Delete Card" Click="OnDeleteCardButtonClick"/>
	</div>
</div>
<br/>
<RadzenButton ButtonStyle="ButtonStyle.Success" Text="Create Dashboard" 
              Disabled="_newCardSettings.Count == 0 || string.IsNullOrWhiteSpace(_newDashboardName)" Click="OnCreateDashboardButtonClick"/>

@code {
	private CardSetting _chosenCard = new("");
	private HashSet<CardSetting> _newCardSettings = new();
	private string _newDashboardName = "";

	private void OnDashboardNameChange(string name)
	{
		_newDashboardName = name;
	}

	private async Task OnCreateDashboardButtonClick()
	{
		var newDashboard = new DashboardSetting(_newCardSettings, _newDashboardName);
		await _dataService.UpdateFbDashboardSettings(new[] { newDashboard });
	}

	private async Task OnCreateCardButtonClick()
	{
		await _dialogService.OpenAsync<CreateNewCard>("Create New Card",
			new Dictionary<string, object>
			{
				{ nameof(CreateNewCard.CardSettings), _newCardSettings }
			},
			new DialogOptions { Width = "60%", Height = "70%", Resizable = true });
	}

	private void OnDeleteCardButtonClick()
	{
		_newCardSettings.Remove(_chosenCard);
	}
}