@page "//{UrlCompany}/dashboards/default"

@using Privasight.Wasm.UI
@using Privasight.Model.Shared.DataStructures.Interfaces
@using Privasight.Model.Shared.DataStructures
@using Privasight.Model.Shared.Display.Dashboard
@using Privasight.Model.Shared.Helpers
@using Privasight.Wasm.Configs

<PageTitle>
	@_title| Privasight
</PageTitle>

<Dashboard Setting="GetDefaultDashboardSetting()" Company="_company"/>

@code {
	private string _title = "All Available Data";
	private AvailableCompany _company;

	[Parameter]
	public string UrlCompany { get; set; } = "";

	protected override void OnInitialized()
	{
		_company = Enum.Parse<AvailableCompany>(UrlCompany);
		_title = $"All Available Data from {_company}";
	}

	private DashboardSetting GetDefaultDashboardSetting()
	{
		var cardSettings = new HashSet<CardSetting>();

		foreach (var fileWrapperType in CompanyConfigs.AvailableFileWrappers[_company].Values)
		{
			CardSetting? card = null;

			if (fileWrapperType.GetInterfaces().Contains(typeof(ISingleItemListFile<StringWrapperDbObj>)))
			{
				var title = ReflectionHelper.GetTitleFromFileWrapper(fileWrapperType);
				card = new CardSetting(title, fileWrapperType.Name, DialogTypes.DataList, CardTypes.WithLineChart);
			}
			else if (fileWrapperType.GetInterfaces().Contains(typeof(ISingleItemListFile)))
			{
				var title = ReflectionHelper.GetTitleFromFileWrapper(fileWrapperType);
				card = new CardSetting(title, fileWrapperType.Name, DialogTypes.DetailedTable, CardTypes.WithLineChart);
			}

			if (card != null)
			{
				cardSettings.Add(card);
			}
		}

		return new DashboardSetting(cardSettings, _title);
	}
}